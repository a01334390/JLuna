/*
 * Copyright (c) 2017 a01334390.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    a01334390 - initial API and implementation and/or initial documentation
 */
package BasicElements.AdvancedViews;

import BasicElements.*;
import javax.swing.*;
import luna.databaseManager.*;

/**
 *
 * @author a01334390
 */
public class PedidosView extends javax.swing.JFrame {

    private final Session session;
    private Cliente currentClient;
    private Order currentOrder;
    private OrderNotebooks[] currentON;
    private AVOrderNotebook currentAV;
    private Order orderList[] = new Order[0];

    /**
     * Creates new form PedidosForm
     *
     * @param session
     */
    public PedidosView(Session session) {
        this.session = session;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        clientIDSearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        clientNameSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientList = new javax.swing.JList<>();
        OrderFetch = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        OrderList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        NotebookList = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        orderID = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        orderEdit = new javax.swing.JButton();
        orderDelete = new javax.swing.JButton();
        orderAdd = new javax.swing.JButton();
        status = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        type = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ribbon = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pagetype = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        elastic = new javax.swing.JComboBox<>();

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pedidos");
        setAlwaysOnTop(true);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Busqueda de Cliente"));

        jLabel1.setText("Búsqueda por ID");

        clientIDSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientIDSearchActionPerformed(evt);
            }
        });

        jLabel2.setText("Búsqueda por Nombre");

        clientNameSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientNameSearchActionPerformed(evt);
            }
        });

        clientList.setModel(new javax.swing.AbstractListModel<String>() {
            Cliente[] strings = DatabaseManager.getAllClients();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i].toString(); }
        });
        clientList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                clientListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(clientList);

        OrderFetch.setText("Ver Pedidos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(clientIDSearch, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(clientNameSearch, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(OrderFetch)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientIDSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OrderFetch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pedidos del Cliente"));

        OrderList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return orderList.length; }
            public String getElementAt(int i) { return orderList[i].toString(); }
        });
        OrderList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                OrderListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(OrderList);

        jLabel3.setText("Orden # :");

        jLabel4.setText("Cantidad:");

        jLabel5.setText("Status:");

        NotebookList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                NotebookListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(NotebookList);

        jLabel6.setText("Cuadernos relacionados a esta orden");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Funciones de Orden"));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        if(session.getPrivilege().equals("admin") || session.getPrivilege().equals("manager")){
            orderEdit.setEnabled(true);
        }else{
            orderEdit.setEnabled(false);
        }
        orderEdit.setText("Editar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 26, 18, 0);
        jPanel5.add(orderEdit, gridBagConstraints);

        if(!session.getPrivilege().equals("admin")){
            orderDelete.setEnabled(false);
        }
        orderDelete.setText("Eliminar");
        orderDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 29, 18, 0);
        jPanel5.add(orderDelete, gridBagConstraints);

        if(session.getPrivilege().equals("admin") || session.getPrivilege().equals("manager")){
            orderAdd.setEnabled(true);
        }else{
            orderAdd.setEnabled(false);
        }
        orderAdd.setText("Añadir");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 31, 18, 12);
        jPanel5.add(orderAdd, gridBagConstraints);

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Diseño", "Preview", "Laminado", "Revision", "Prensa", "Embalaje", "Envio", "Entrega" }));
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(orderID))
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(quantity)
                                            .addComponent(status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addContainerGap())))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(orderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalles del Cuaderno"));

        jLabel7.setText("Tipo:");

        jLabel8.setText("Liston:");

        ribbon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Negro", "Blanco", "Ninguno" }));

        jLabel9.setText("Tipo de Hoja");

        jLabel10.setText("Imagen");

        pagetype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plano", "Rayado", "Agenda" }));
        pagetype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagetypeActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 188, Short.MAX_VALUE)
        );

        jLabel11.setText("Elastico");

        elastic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ribbon, 0, 195, Short.MAX_VALUE)
                    .addComponent(pagetype, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(type)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel11)
                                .addComponent(jLabel10))))
                    .addComponent(elastic, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ribbon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pagetype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(elastic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clientIDSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientIDSearchActionPerformed
        String id = clientIDSearch.getText();
        currentClient = DatabaseManager.searchClientByID(id);
        if (currentClient != null) {
            updateListView();
        } else {
            JOptionPane.showMessageDialog(null, "No se encontro al cliente con este criterio", "Cliente", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_clientIDSearchActionPerformed

    private void clientNameSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientNameSearchActionPerformed
        String name = clientNameSearch.getText();
        currentClient = DatabaseManager.searchClientByName(name);
        if (currentClient != null) {
            updateListView();
        } else {
            JOptionPane.showMessageDialog(null, "No se encontro al cliente con este criterio", "Cliente", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_clientNameSearchActionPerformed

    private void clientListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_clientListValueChanged
        String[] sname = clientList.getSelectedValue().split(",");
        String name = sname[1];
        currentClient = DatabaseManager.searchClientByName(name);
        if (currentClient != null) {
            updateListView();
        } else {
            JOptionPane.showMessageDialog(null, "No se encontro al cliente con este criterio", "Cliente", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_clientListValueChanged

    private void OrderListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_OrderListValueChanged
        String orderid = OrderList.getSelectedValue();
        currentOrder = DatabaseManager.searchOrderByID(orderid);
        if (currentOrder != null) {
            orderID.setText(Integer.toString(currentOrder.getId()));
            currentON = DatabaseManager.getOrderNotebookBasicView(currentOrder.getId());
            updateONView();
        } else {
            JOptionPane.showMessageDialog(null, "No hay ordenes para este cliente", "Orden del Cliente", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_OrderListValueChanged

    private void NotebookListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_NotebookListValueChanged
        String idNotebook = NotebookList.getSelectedValue();
        currentAV = DatabaseManager.searchNotebookON(idNotebook, currentOrder.getId());
        type.setText(currentAV.getType());

        switch (currentAV.getRibbon()) {
            case "B":
                ribbon.setSelectedIndex(0);
                break;
            case "W":
                ribbon.setSelectedIndex(1);
                break;
            case "NONE":
                ribbon.setSelectedIndex(2);
                break;
            default:
                ribbon.setSelectedIndex(0);
                break;
        }

        switch (currentAV.getPageType()) {
            case "PLAIN":
                pagetype.setSelectedIndex(0);
                break;
            case "LINED":
                pagetype.setSelectedIndex(1);
                break;
            case "AGENDA":
                pagetype.setSelectedIndex(2);
                break;
        }

        if (currentAV.getElastic().equals("Y")) {
            elastic.setSelectedIndex(0);
        } else {
            elastic.setSelectedIndex(1);
        }
    }//GEN-LAST:event_NotebookListValueChanged

    private void orderDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderDeleteActionPerformed
        int orderid = currentOrder.getId();
        if (DatabaseManager.deleteOrder(orderid)) {
            JOptionPane.showMessageDialog(null, "El pedido se borro correctamente", "Orden del Cliente", JOptionPane.INFORMATION_MESSAGE);
            updateListView();
        } else {
            JOptionPane.showMessageDialog(null, "El pedido no se pudo borrar", "Orden del Cliente", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_orderDeleteActionPerformed

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusActionPerformed

    private void pagetypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagetypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pagetypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> NotebookList;
    private javax.swing.JButton OrderFetch;
    private javax.swing.JList<String> OrderList;
    private javax.swing.JTextField clientIDSearch;
    private javax.swing.JList<String> clientList;
    private javax.swing.JTextField clientNameSearch;
    private javax.swing.JComboBox<String> elastic;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton orderAdd;
    private javax.swing.JButton orderDelete;
    private javax.swing.JButton orderEdit;
    private javax.swing.JTextField orderID;
    private javax.swing.JComboBox<String> pagetype;
    private javax.swing.JTextField quantity;
    private javax.swing.JComboBox<String> ribbon;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JTextField type;
    // End of variables declaration//GEN-END:variables

    private void updateListView() {
        int clientID = currentClient.getId();
        orderList = DatabaseManager.getOrdersFromClient(clientID);
        OrderList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return orderList.length;
            }

            public String getElementAt(int i) {
                return orderList[i].toString();
            }
        });
        OrderList.repaint();
    }

    private void updateONView() {
        NotebookList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return currentON.length;
            }

            public String getElementAt(int i) {
                return currentON[i].toString();
            }
        });
        int idorder = OrderList.getSelectedIndex();
        orderID.setText(Integer.toString(currentON[idorder].getId_Order()));
        quantity.setText(Integer.toString(currentON[idorder].getQuantity()));
        switch (currentON[idorder].getStatus()) {
            case "Diseño":
                status.setSelectedIndex(0);
                break;
            case "Preview":
                status.setSelectedIndex(1);
                break;
            case "Laminado":
                status.setSelectedIndex(2);
                break;
            case "Revision":
                status.setSelectedIndex(3);
                break;
            case "Prensa":
                status.setSelectedIndex(4);
                break;
            case "Embalaje":
                status.setSelectedIndex(5);
                break;
            case "Envio":
                status.setSelectedIndex(6);
                break;
            case "Entrega":
                status.setSelectedIndex(7);
                break;
        }
    }

}
