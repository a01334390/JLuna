/*
 * Copyright (c) 2017 Arpi.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Arpi - initial API and implementation and/or initial documentation
 */
package BasicElements.AdvancedViews;
import BasicElements.Material;
import BasicViews.MainWindowForm;
import luna.databaseManager.DatabaseManager;
import luna.databaseManager.Session;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
/**
 *
 * @author Arpi
 */
public class MacroView extends javax.swing.JFrame {
    private Session session;
    /**
     * Creates new form MacroView
     */
    public MacroView() {
        initComponents();
    }
    public MacroView(Session session) {
        this.session=session;
        initComponents();
        semanaText.setEditable(false);
        atrasadoText.setEditable(false);
        clientesText.setEditable(false);
        productosText.setEditable(false);
        setSemana();
        setAtrasados();
        setClientes();
        setProductos();
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                    MainWindowForm mwf = new MainWindowForm(session);
                    mwf.setVisible(true);
            }
        }); 
    }
    private void setProductos(){
        productosText.setEditable(false);
        Material [] material = DatabaseManager.getShortageOfMaterial();
        productosText.append("Hay escasez de los siguientes materiales:\n");
        for(int i = 0;i < material.length; i++){
            productosText.append(material[i].getQuantity()+" "+material[i].getName()+"\n");
        }
        String [] notebooks = DatabaseManager.getShortageOfNotebooks();
        productosText.append("Hay escasez de los siguientes cuadernos:\n");
        for(int i = 0;i < notebooks.length; i++){
            productosText.append(notebooks[i]+"\n");
        }
    }
    private void setClientes(){
        clientesText.setText("");
        String [] notebooks = DatabaseManager.getMostOrderedNotebooks();
        clientesText.append("Pedidos ordenados por cliente con mayor cantidad de cuadernos a menor\n"
                + "ID \t Nombre \t\t Status \t Prioridad \t Cantidad \n");
        for(int i = 0;i < notebooks.length; i++){
            clientesText.append(notebooks[i]+"\n");
        }
    }
    private void setAtrasados(){//localDate.minusMonths(1).toString()
        LocalDate localDate = LocalDate.now();
        String today=DateTimeFormatter.ofPattern("yyy/MM/dd").format(
                localDate).toString();
        atrasadoText.append("Pedidos atrasados:"+"\n"); 
        String orders [] = DatabaseManager.getOrdersUnfinished();
        for(int i = 0;i < orders.length; i++){
            atrasadoText.append(orders[i]+"\n");
            
        }
    }
    private void setSemana(){
        //DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDate localDate = LocalDate.now();
        String today=DateTimeFormatter.ofPattern("yyy/MM/dd").format(
                localDate).toString();
        LocalDate after=localDate.plusDays(7);
        String daysAfter=DateTimeFormatter.ofPattern("yyy/MM/dd").format(
                after).toString();
        String orders [] = DatabaseManager.getOrdersByDate();
        semanaText.append("Pedidos "+ " entre "+today+" y "+daysAfter+".\n");            
        for(int i = 0;i < orders.length; i++){
            String sub=orders[i].substring(0, 10);
            LocalDate queryDate = LocalDate.parse(sub);
            if(queryDate.isAfter(localDate.minusDays(1)) && queryDate.isBefore(
                    after)){
                semanaText.append(orders[i]+"\n");
            }
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        atrasadoText = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        clientesText = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        productosText = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        semanaText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Pedidos atrasados");

        jLabel2.setText("Pedidos de la semana");

        jLabel3.setText("Los clientes que mas pedidos han hecho");

        jLabel4.setText("Productos que ya se van a acabar ");

        atrasadoText.setColumns(20);
        atrasadoText.setRows(5);
        jScrollPane1.setViewportView(atrasadoText);

        clientesText.setColumns(20);
        clientesText.setRows(5);
        jScrollPane6.setViewportView(clientesText);

        productosText.setColumns(20);
        productosText.setRows(5);
        jScrollPane7.setViewportView(productosText);

        semanaText.setColumns(20);
        semanaText.setRows(5);
        jScrollPane8.setViewportView(semanaText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 5, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(313, 313, 313))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
                    .addComponent(jScrollPane8)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea atrasadoText;
    private javax.swing.JTextArea clientesText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextArea productosText;
    private javax.swing.JTextArea semanaText;
    // End of variables declaration//GEN-END:variables
}
